set(VERSION_MAJOR 0)
set(VERSION_MINOR 6)
set(VERSION_PATCH 0)

cmake_minimum_required(VERSION 3.0.2)

project(kdewin-tools)

# calculate the version in an ugly way
math(EXPR VERSION "1000000+${VERSION_MAJOR}*10000+${VERSION_MINOR}*100+${VERSION_PATCH}")
string(SUBSTRING ${VERSION} 1 6 VERSION)
set(VERSION "0x${VERSION}")
set (VERSION_STR ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})

if (POLICY CMP0020)
   cmake_policy(SET CMP0020 NEW)
endif()

if(WIN32)
    set(WIN32_ON ON)
else()
    set(WIN32_ON OFF)
endif()

if(MINGW)
    set(MINGW_ON ON)
else()
    set(MINGW_ON OFF)
endif()

OPTION(BUILD_QT5 "build for Qt5" OFF)
OPTION(BUILD_CREATE_HASH_TABLE "build create_hash_table tool" ${WIN32_ON})
OPTION(BUILD_MT "build mt tool" ${MINGW_ON})
OPTION(BUILD_PNG2ICO "build png2ico tool" ON)
OPTION(BUILD_SVG2ICO "build svg2ico tool" ${WIN32_ON})
OPTION(BUILD_SVG2MULTIPNG "build svg2multipng tool" ON)

set (EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)

if(BUILD_PNG2ICO OR BUILD_SVG2ICO)
    if(BUILD_QT5)
        set(QT_MIN_VERSION "5.2.0")
        find_package(Qt5 ${QT_MIN_VERSION} REQUIRED COMPONENTS Core Gui Svg)
        set(QT_QTCORE_LIBRARY Qt5::Core)
        set(QT_QTGUI_LIBRARY Qt5::Gui)
        set(QT_QTSVG_LIBRARY Qt5::Svg)
    else()
        find_package(Qt4 4.4.3 REQUIRED QtCore QtGui QtSvg)
        set(QT_QTCORE_LIBRARY Qt4::QtCore)
        set(QT_QTGUI_LIBRARY Qt4::QtGui)
        set(QT_QTSVG_LIBRARY Qt4::QtSvg)
    endif()
endif()

configure_file(KDEWinToolsConfig.cmake.in ${CMAKE_BINARY_DIR}/KDEWinToolsConfig.cmake @ONLY)
configure_file(KDEWinToolsConfigVersion.cmake.in ${CMAKE_BINARY_DIR}/KDEWinToolsConfigVersion.cmake @ONLY)
install(FILES ${CMAKE_BINARY_DIR}/KDEWinToolsConfig.cmake ${CMAKE_BINARY_DIR}/KDEWinToolsConfigVersion.cmake DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/KDEWinTools)
install(EXPORT targets FILE KDEWinToolsTargets.cmake DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/KDEWinTools)
install(FILES readme.txt DESTINATION share/doc/kdewin-tools-${VERSION_STR})

if(BUILD_CREATE_HASH_TABLE)
    add_subdirectory(create_hash_table)
endif()
if (BUILD_MT)
    add_subdirectory(mt)
endif()
if(BUILD_PNG2ICO)
    add_subdirectory(png2ico)
endif()
if(BUILD_SVG2ICO)
    add_subdirectory(svg2ico)
endif()

if(BUILD_SVG2MULTIPNG)
    add_subdirectory(svg2multipng)
endif()
