@begin keyword 86
template Token_template
emit Token_emit
long Token_long
void Token_void
explicit Token_explicit
enum Token_enum
continue Token_continue
k_dcop_signals Token_k_dcop_signals
auto Token_auto
Q_OBJECT Token_Q_OBJECT
and_eq Token_and_eq
operator Token_operator
class Token_class
while Token_while
k_dcop Token_k_dcop
compl Token_compl
bitand Token_bitand
__int64 Token_int
bitor Token_bitor
friend Token_friend
signed Token_signed
double Token_double
K_DCOP Token_K_DCOP
const Token_const
inline Token_inline
do Token_do
const_cast Token_const_cast
not_eq Token_not_eq
static Token_static
throw Token_throw
slots Token_slots
static_cast Token_static_cast
default Token_default
sizeof Token_sizeof
switch Token_switch
mutable Token_mutable
dynamic_cast Token_dynamic_cast
extern Token_extern
asm Token_asm
signals Token_signals
case Token_case
for Token_for
char Token_char
export Token_export
int Token_int
private Token_private
not Token_not
else Token_else
bool Token_bool
catch Token_catch
__asm__ Token_asm
and Token_and
break Token_break
delete Token_delete
float Token_float
goto Token_goto
if Token_if
namespace Token_namespace
new Token_new
or Token_or
or_eq Token_or_eq
protected Token_protected
public Token_public
register Token_register
reinterpret_cast Token_reinterpret_cast
return Token_return
short Token_short
struct Token_struct
this Token_this
try Token_try
typedef Token_typedef
typeid Token_typeid
typename Token_typename
union Token_union
unsigned Token_unsigned
using Token_using
virtual Token_virtual
volatile Token_volatile
xor Token_xor
xor_eq Token_xor_eq
// extension php
//function Token_function
//final Token_final
//elseif Token_elseif
@end
